(declare-const x!162 Int)

(declare-const y!34 Int)

(define-fun-rec add!0 ((x!155 Int) (y!33 Int)) Int (assume (and (>= x!155 0) (>= y!33 0)) (let ((_$1!20 (let ((targetBound!0 (<= x!155 0))) (ite targetBound!0 y!33 (add!0 (- x!155 1) (+ y!33 1)))))) (assume (> _$1!20 (- 10)) _$1!20))))

(assert (not (or (< x!162 0) (< y!34 0) (<= x!162 0) (> (add!0 (- x!162 1) (+ y!34 1)) (- 10)))))

(check-sat)

; check-assumptions required here, but not part of tip standard